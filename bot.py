import discord
from discord.ext import commands, tasks
from discord import app_commands
import os
from dotenv import load_dotenv
import datetime
import pytz

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

TOKEN = os.getenv('TOKEN')
GUILD_ID = int(os.getenv('GUILD_ID'))
CHANNEL_ID = int(os.getenv('CHANNEL_ID'))
IMPORTANT_ROLE = "Summary"

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —ñ–Ω—Ç–µ–Ω—Ç—ñ–≤
intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = commands.Bot(command_prefix="!", intents=intents)
tree = app_commands.CommandTree(bot)

important_messages = []

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–∞–∂–ª–∏–≤–µ
def is_important_message(message):
    if message.author.bot:
        return False
    if message.content.startswith("!digest") or message.content.startswith("/digest"):
        return False

    guild = bot.get_guild(GUILD_ID)
    if not guild:
        return False

    member = guild.get_member(message.author.id)
    if not member:
        return False

    role_names = [role.name for role in member.roles]
    return IMPORTANT_ROLE in role_names

# –ü–æ–¥—ñ—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π —è–∫ {bot.user}")
    await tree.sync(guild=discord.Object(id=GUILD_ID))
    daily_summary.start()

# –û–±—Ä–æ–±–∫–∞ –Ω–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@bot.event
async def on_message(message):
    if is_important_message(message):
        important_messages.append(message)

    await bot.process_commands(message)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∞–π–¥–∂–µ—Å—Ç–∞
async def send_digest():
    channel = bot.get_channel(CHANNEL_ID)
    if not important_messages:
        await channel.send("‚ÑπÔ∏è –ù–µ–º–∞—î –Ω–æ–≤–∏—Ö –≤–∞–∂–ª–∏–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –Ω–∞ —Ü–µ–π –º–æ–º–µ–Ω—Ç.")
        return

    kyiv_tz = pytz.timezone('Europe/Kyiv')
    today = datetime.datetime.now(kyiv_tz)
    yesterday = today - datetime.timedelta(days=1)
    date_range = f"{yesterday.strftime('%d.%m')}‚Äì{today.strftime('%d.%m')}"

    embed = discord.Embed(
        title=f"üìö –í—ã–∂–∏–º–∫–∞ 2TOP SQUAD {date_range}",
        color=discord.Color.blue()
    )

    for msg in important_messages:
        if msg.channel and msg.content:
            content_preview = msg.content.split('\n')[0][:80]
            if not content_preview:
                content_preview = "–ë–µ–∑ —Ç–µ–∫—Å—Ç—É (–ª–∏—à–µ –≤–∫–ª–∞–¥–µ–Ω–Ω—è)"

            embed.add_field(
                name=f"#{msg.channel.name} ‚Äì {content_preview}",
                value=f"[–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è]({msg.jump_url})",
                inline=False
            )

    await channel.send(embed=embed)
    important_messages.clear()

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —â–æ–¥–Ω—è –æ 6 —Ä–∞–Ω–∫—É
@tasks.loop(time=datetime.time(hour=6, minute=0, tzinfo=pytz.timezone('Europe/Kyiv')))
async def daily_summary():
    await send_digest()

# Slash-–∫–æ–º–∞–Ω–¥–∞ /digest
@tree.command(name="digest", description="–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –¥–∞–π–¥–∂–µ—Å—Ç –≤–∞–∂–ª–∏–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤—Ä—É—á–Ω—É", guild=discord.Object(id=GUILD_ID))
async def digest(interaction: discord.Interaction):
    await interaction.response.defer()
    await send_digest()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run(TOKEN)
